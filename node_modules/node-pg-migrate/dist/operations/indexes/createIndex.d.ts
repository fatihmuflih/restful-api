import type { MigrationOptions } from '../../types';
import type { Name, Reversible } from '../generalTypes';
import type { DropIndexOptions } from './dropIndex';
import type { IndexColumn } from './shared';
export interface CreateIndexOptions {
    name?: string;
    unique?: boolean;
    where?: string;
    concurrently?: boolean;
    ifNotExists?: boolean;
    /**
     * @deprecated should be parameter of IndexColumn
     */
    opclass?: Name;
    method?: 'btree' | 'hash' | 'gist' | 'spgist' | 'gin';
    include?: string | string[];
}
export declare type CreateIndexFn = (tableName: Name, columns: string | Array<string | IndexColumn>, options?: CreateIndexOptions & DropIndexOptions) => string | string[];
export declare type CreateIndex = Reversible<CreateIndexFn>;
export declare function createIndex(mOptions: MigrationOptions): CreateIndex;
