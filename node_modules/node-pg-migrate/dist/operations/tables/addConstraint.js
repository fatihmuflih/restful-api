"use strict";Object.defineProperty(exports, "__esModule", {value: true});var _utils = require('../../utils');
var _dropConstraint = require('./dropConstraint');
var _shared = require('./shared');
function addConstraint(mOptions) {
  const _add = (tableName, constraintName, expression) => {
    const { constraints, comments } = typeof expression === "string" ? {
      constraints: [
        `${constraintName ? `CONSTRAINT ${mOptions.literal(constraintName)} ` : ""}${expression}`
      ],
      comments: []
    } : _shared.parseConstraints.call(void 0, 
      tableName,
      expression,
      constraintName,
      mOptions.literal
    );
    const constraintStr = _utils.formatLines.call(void 0, constraints, "  ADD ");
    return [
      `ALTER TABLE ${mOptions.literal(tableName)}
${constraintStr};`,
      ...comments
    ].join("\n");
  };
  _add.reverse = (tableName, constraintName, options) => {
    if (constraintName === null) {
      throw new Error(
        "Impossible to automatically infer down migration for addConstraint without naming constraint"
      );
    }
    if (typeof options === "string") {
      throw new Error(
        "Impossible to automatically infer down migration for addConstraint with raw SQL expression"
      );
    }
    return _dropConstraint.dropConstraint.call(void 0, mOptions)(tableName, constraintName, options);
  };
  return _add;
}


exports.addConstraint = addConstraint;
